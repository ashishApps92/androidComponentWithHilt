// Generated by Dagger (https://dagger.dev).
package ashish.apps.androidcomponentwithhilt.di;

import ashish.apps.androidcomponentwithhilt.network.RetrofitApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import retrofit2.Retrofit;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RetrofitProviderInstance_ProvideRetrofitApiInstanceFactory implements Factory<RetrofitApi> {
  private final RetrofitProviderInstance module;

  private final Provider<Retrofit> retrofitProvider;

  public RetrofitProviderInstance_ProvideRetrofitApiInstanceFactory(RetrofitProviderInstance module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public RetrofitApi get() {
    return provideRetrofitApiInstance(module, retrofitProvider.get());
  }

  public static RetrofitProviderInstance_ProvideRetrofitApiInstanceFactory create(
      RetrofitProviderInstance module, Provider<Retrofit> retrofitProvider) {
    return new RetrofitProviderInstance_ProvideRetrofitApiInstanceFactory(module, retrofitProvider);
  }

  public static RetrofitApi provideRetrofitApiInstance(RetrofitProviderInstance instance,
      Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(instance.provideRetrofitApiInstance(retrofit));
  }
}
